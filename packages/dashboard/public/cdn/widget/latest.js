(()=>{"use strict";class e{constructor(e){this.isOpen=!1,this.button=null,this.overlay=null,this.retryCount=0,this.maxRetries=3,this.lastFocusedElement=null,this.config={position:"bottom-right",embedMode:"modal",...e},this.init()}static init(t){return new e(t)}init(){"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.setup()):this.setup()}setup(){this.adaptLookAndFeel(),"inline"===this.config.embedMode?this.createInlineForm():"trigger"===this.config.embedMode?this.attachTriggerListeners():(this.createButton(),this.attachEventListeners()),this.log("Widget initialized successfully")}adaptLookAndFeel(){try{const e=document.body,t=getComputedStyle(e).fontFamily||"",s=document.querySelector("a"),n=s?getComputedStyle(s).color:"",a=this.config.primaryColor||n||"";t&&document.documentElement.style.setProperty("--feedbacks-font-family",t),a&&document.documentElement.style.setProperty("--feedbacks-primary",a)}catch{}}log(e){this.config.debug&&console.log("[Feedbacks Widget]",e)}createButton(){this.button=document.createElement("button"),this.button.className=`feedbacks-button position-${this.config.position}`,this.button.innerHTML=this.config.buttonText||"Feedback",this.button.title="Send feedback",this.button.setAttribute("aria-label","Open feedback form"),this.config.primaryColor&&(this.button.style.background=this.config.primaryColor),document.body.appendChild(this.button)}createInlineForm(){const e=this.config.target?document.querySelector(this.config.target):document.body;if(!e)return void this.log("Target element not found, falling back to body");const t=document.createElement("div");t.className="feedbacks-inline-container",t.innerHTML=this.getFormHTML(!1),e.appendChild(t),this.attachFormHandlers(t,!1)}attachTriggerListeners(){const e=this.config.target?document.querySelectorAll(this.config.target):document.querySelectorAll("[data-feedbacks-trigger]");e.forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),this.open()})}),this.log(`Attached to ${e.length} trigger elements`)}getFormHTML(e=!1){const t=e?"-modal":"-inline";return`\n      <div class="feedbacks-widget">\n        <div class="feedbacks-header">\n          <h3 class="feedbacks-title">Send Feedback</h3>\n          <p class="feedbacks-subtitle">Help us improve by sharing your thoughts</p>\n          ${e?'<button type="button" class="feedbacks-close" aria-label="Close feedback form">✕</button>':""}\n        </div>\n        <div class="feedbacks-content">\n          <form class="feedbacks-form">\n            <div class="feedbacks-field">\n              <label for="feedbacks-message${t}" class="feedbacks-label">Your feedback *</label>\n              <textarea\n                id="feedbacks-message${t}"\n                class="feedbacks-textarea"\n                placeholder="What's on your mind? Any bugs, suggestions, or general feedback..."\n                required\n                maxlength="2000"\n              ></textarea>\n              <div class="feedbacks-char-count">0/2000</div>\n            </div>\n            <div class="feedbacks-field">\n              <label for="feedbacks-type${t}" class="feedbacks-label">Category (optional)</label>\n              <select id="feedbacks-type${t}" class="feedbacks-input">\n                <option value="">Select a category</option>\n                <option value="bug">Bug</option>\n                <option value="idea">Idea</option>\n                <option value="praise">Praise</option>\n              </select>\n            </div>\n            <div class="feedbacks-field">\n              <label for="feedbacks-rating${t}" class="feedbacks-label">Rating (optional)</label>\n              <select id="feedbacks-rating${t}" class="feedbacks-input">\n                <option value="">No rating</option>\n                <option value="1">1</option>\n                <option value="2">2</option>\n                <option value="3">3</option>\n                <option value="4">4</option>\n                <option value="5">5</option>\n              </select>\n            </div>\n            <div class="feedbacks-field">\n              <label for="feedbacks-email${t}" class="feedbacks-label">Email (optional)</label>\n              <input\n                id="feedbacks-email${t}"\n                type="email"\n                class="feedbacks-input"\n                placeholder="your@email.com"\n              />\n            </div>\n            <div class="feedbacks-actions">\n              ${e?'<button type="button" class="feedbacks-btn feedbacks-btn-secondary">Cancel</button>':""}\n              <button type="submit" class="feedbacks-btn feedbacks-btn-primary">\n                Send Feedback\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    `}attachEventListeners(){this.button?.addEventListener("click",()=>this.open()),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isOpen&&this.close()})}open(){this.isOpen||(this.isOpen=!0,this.lastFocusedElement=document.activeElement||null,this.createModal(),this.log("Modal opened"),document.body.style.overflow="hidden")}close(){this.isOpen&&(this.isOpen=!1,this.overlay&&(document.body.removeChild(this.overlay),this.overlay=null),document.body.style.overflow="",this.lastFocusedElement&&"function"==typeof this.lastFocusedElement.focus?this.lastFocusedElement.focus():this.button&&"function"==typeof this.button.focus&&this.button.focus(),this.log("Modal closed"))}createModal(){this.overlay=document.createElement("div"),this.overlay.className="feedbacks-overlay",this.overlay.addEventListener("click",e=>{e.target===this.overlay&&this.close()});const e=document.createElement("div");e.className="feedbacks-modal",e.setAttribute("role","dialog"),e.setAttribute("aria-labelledby","feedbacks-title"),e.innerHTML=this.getFormHTML(!0),this.overlay.appendChild(e),document.body.appendChild(this.overlay);const t=e.querySelector("#feedbacks-message-modal");setTimeout(()=>t?.focus(),100);const s=["a[href]","button:not([disabled])","textarea:not([disabled])",'input[type="text"]:not([disabled])','input[type="email"]:not([disabled])',"select:not([disabled])",'[tabindex]:not([tabindex="-1"])'].join(",");e.addEventListener("keydown",t=>{if("Tab"!==t.key)return;const n=Array.from(e.querySelectorAll(s));if(0===n.length)return;const a=n[0],o=n[n.length-1],i=document.activeElement;t.shiftKey?i&&i!==a||(t.preventDefault(),o.focus()):i&&i!==o||(t.preventDefault(),a.focus())}),this.attachFormHandlers(e,!0)}attachFormHandlers(e,t=!0){const s=t?"-modal":"-inline",n=e.querySelector("form"),a=e.querySelector(`#feedbacks-message${s}`),o=e.querySelector(`#feedbacks-email${s}`),i=e.querySelector(`#feedbacks-type${s}`),c=e.querySelector(`#feedbacks-rating${s}`),d=e.querySelector(".feedbacks-btn-secondary"),l=e.querySelector(".feedbacks-close"),r=e.querySelector(".feedbacks-btn-primary"),u=e.querySelector(".feedbacks-char-count");n&&a&&r?(a.addEventListener("input",()=>{const e=a.value.length;u.textContent=`${e}/2000`,u.style.color=e>1900?"#dc2626":"#9ca3af"}),d&&d.addEventListener("click",()=>this.close()),l&&l.addEventListener("click",()=>this.close()),n.addEventListener("submit",async s=>{s.preventDefault();const n=a.value.trim(),d=o.value.trim();if(!n||n.length<2)this.showError("Please enter your feedback (at least 2 characters)");else if(n.length>2e3)this.showError("Feedback is too long (maximum 2000 characters)");else if(!d||this.isValidEmail(d)){this.setSubmitState(r,!0);try{await this.submitFeedback({apiKey:this.config.projectKey,message:n,email:d||void 0,url:window.location.href,userAgent:navigator.userAgent,type:i&&i.value?i.value:void 0,rating:c&&c.value?parseInt(c.value,10):void 0}),t?this.showSuccess():this.showInlineSuccess(e),this.log("Feedback submitted successfully")}catch(e){this.log(`Submission failed: ${e}`),this.showError("Failed to send feedback. Please try again or contact support."),this.setSubmitState(r,!1)}}else this.showError("Please enter a valid email address")})):this.log("Required form elements not found")}async submitFeedback(e){return this.submitWithRetry(e)}async submitWithRetry(e,t=1){try{const t=this.config.apiUrl||"https://app.feedbacks.dev/api/feedback",s=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);return await s.json()}catch(s){if(t<this.maxRetries)return this.log(`Attempt ${t} failed, retrying...`),await this.delay(400*t),this.submitWithRetry(e,t+1);throw s}}delay(e){return new Promise(t=>setTimeout(t,e))}isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}setSubmitState(e,t){e.disabled=t,e.innerHTML=t?'\n        <span class="feedbacks-spinner"></span>\n        Sending...\n      ':"Send Feedback"}showSuccess(){if(!this.overlay)return;const e=this.overlay.querySelector(".feedbacks-modal");e.innerHTML='\n      <div class="feedbacks-success">\n        <div class="feedbacks-success-icon">✓</div>\n        <h3>Thank you!</h3>\n        <p>Your feedback has been sent successfully. We\'ll review it and get back to you if needed.</p>\n        <button class="feedbacks-btn feedbacks-btn-primary">Close</button>\n      </div>\n    ',e.querySelector("button").addEventListener("click",()=>this.close()),setTimeout(()=>{this.isOpen&&this.close()},4e3)}showInlineSuccess(e){const t=e.querySelector(".feedbacks-widget"),s=this.getFormHTML(!1);t.innerHTML='\n      <div class="feedbacks-success">\n        <div class="feedbacks-success-icon">✓</div>\n        <h3>Thank you!</h3>\n        <p>Your feedback has been sent successfully. We\'ll review it and get back to you if needed.</p>\n      </div>\n    ',setTimeout(()=>{e.innerHTML=s,this.attachFormHandlers(e,!1)},5e3)}showError(e){const t=document.querySelector(".feedbacks-error");t?.remove();const s=document.querySelector(".feedbacks-content"),n=document.createElement("div");n.className="feedbacks-error",n.innerHTML=`\n      <span>⚠️</span>\n      <span>${e}</span>\n    `,s.insertBefore(n,s.firstChild),setTimeout(()=>n?.remove(),5e3)}}function t(){document.querySelectorAll("script[data-project]").forEach(t=>{const s=t.getAttribute("data-project");if(s){const n={projectKey:s,embedMode:t.getAttribute("data-embed-mode")||"modal",target:t.getAttribute("data-target")||void 0,position:t.getAttribute("data-position")||"bottom-right",buttonText:t.getAttribute("data-button-text")||void 0,primaryColor:t.getAttribute("data-color")||void 0,debug:t.hasAttribute("data-debug")};new e(n)}})}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",t):t(),window.FeedbacksWidget=e})();